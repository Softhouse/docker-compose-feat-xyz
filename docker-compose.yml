version: '2'
services:
    mongodb:
        image: mongo
        hostname: mongodb
        ports:
        - 27017
        volumes:
        - /var/mongo/db:/data/db
        networks:
        - service
        - mongo
        environment:
        - SERVICE_IGNORE=always
        restart: unless-stopped
    consul:
        image: gliderlabs/consul-server
        command: -bootstrap
        hostname: consul
        ports:
        - 8300:8300
        - 8400:8400
        - 8500:8500
        - 8600:53/udp
        networks:
        - service
        environment:
        - SERVICE_IGNORE=always
        restart: unless-stopped
    registrator:
        image: gliderlabs/registrator
        hostname: registrator
        command: -internal
                 -resync 30
                 consul://consul:8500
        networks:
        - service
        volumes:
        - /var/run/docker.sock:/tmp/docker.sock
        environment:
        - SERVICE_IGNORE=always
        restart: unless-stopped
    template:
        build: https://github.com/jonaseck2/docker-loadbalancer.git
        hostname: template
        networks:
            service:
                aliases:
                - xyz
            proxy:
        ports:
        - 80
        environment:
        - SERVICE_IGNORE=always
        restart: unless-stopped
    api:
        build: github.com/Softhouse/laughing-batman.git
        volumes:
        - ./api/config:/app/config
        hostname: api
        env_file: github_secret.env
        environment:
        - MONGO_HOST=mongodb
        - SERVICE_NAME=api
        networks:
        - service
    builder:
        build: github.com/Softhouse/flaming-computing-machine.git
        volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
        - ./builder/ssh:/ssh
        env_file: github_secret.env
        environment:
        - MONGO_HOST=mongodb
        - SERVICE_NET=xyzdeploy_service
        - SERVICE_IGNORE=always
        - SERVICE_DNS=consul, 8.8.8.8, 8.8.4.4
        networks:
        - mongo
        restart: unless-stopped
    proxy:
        build: proxy
        hostname: proxy
        ports:
        - 80:80
        networks:
        - proxy
        environment:
        - SERVICE_IGNORE=always
        restart: unless-stopped
networks:
    service:
    proxy:
    mongo:
